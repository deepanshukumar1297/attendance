/*
	recommended to override equals and tostring method accordingly
	linked list is good for updation insertion or deletion

*/



#	port number = 3306
#	username ="root"
#	password="root"


create database attendance;
use attendance;
create table teacher(
	teacher_name varchar(50) not null ,
    teacher_id varchar(20) ,
    teacher_password varchar(30) not null,
    countlogin int not null,
    primary key(teacher_id)
);
create table section(
	section_name varchar(50) unique not null ,
    section_id varchar(20),
	primary key(section_id)
);
create table subject(
	subject_name varchar(50) unique not null ,
    subject_id varchar(20),
    primary key(subject_id)
);
create table student(
	student_name varchar(50) not null ,
    student_id varchar(20) unique not null,
    section_id varchar(20) ,
    foreign key (section_id) references section(section_id)
    on delete restrict
    on update cascade,
	primary key(section_id,student_id)
);
create table coordinator(
	teacher_id varchar(20) not null unique,
    section_id varchar(20) ,
    foreign key (teacher_id) references teacher(teacher_id)
    on delete cascade
    on update cascade,
    foreign key (section_id) references section(section_id)
    on delete cascade
    on update cascade,
    primary key (section_id) 	
);		
create table teacher_section_subject(
	teacher_id varchar(20) ,
    section_id varchar(20) ,
    subject_id varchar(20) ,
    foreign key (teacher_id) references teacher(teacher_id)
    on delete cascade
    on update cascade,
    foreign key (section_id) references section(section_id)
    on delete cascade
    on update cascade,
    foreign key (subject_id) references subject(subject_id)
    on delete cascade
    on update cascade,
    primary key(teacher_id , section_id , subject_id)
);
create table mark (
		teacher_id varchar(20) ,
		section_id varchar(20) ,
		subject_id varchar(20) ,
        student_id varchar(20) ,
        attendance varchar(10) not null,
        date_of_attendance date not null,
        foreign key (teacher_id ,section_id ,subject_id) references teacher_section_subject(teacher_id ,section_id ,subject_id)
		on delete cascade
		on update cascade,
        foreign key (student_id,section_id) references student(student_id,section_id)
		on delete cascade
		on update cascade
);	






#ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';




#	show processlist;
#	kill processid;    here processid is dynamic
/*
	CREATE USER 'yourUserName'@'%' IDENTIFIED BY 'yourPassword';
	GRANT ALL PRIVILEGES ON databasename.tablename TO 'user'@'host' IDENTIFIED BY 'safe_password' WITH GRANT OPTION;    
	FLUSH PRIVILEGES;
	
	(host for all ip addresses =%)
	(for all databses= *.*)
	(for particular database= databasename.*)
	(for particular database with particualr table = databasename.tablename)
	
*/
#	select user,host from MySQL.user;   (to see existing users)
#	DROP USER 'user'@'host';            (to drop users)   (ex-DROP USER 'Jack'@'localhost'; DROP USER 'deep'@'%';)




/*
	to_change_user_name
	
	select user from MySQL.user;
	update mysql.user set user = 'myRoot' where user = 'root';
	
	to_know_the_hostname or port
	
	show variables where variable_name='hostname';
	show variables where variable_name='port';

*/